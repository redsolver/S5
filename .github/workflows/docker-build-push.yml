name: Docker Build and Push

on:
  # push:
  #   branches:
  #     - main
  release:
    types: [created]

env:
  DEVELOPER_HANDLE: ${{ github.repository_owner }}
  LOCAL_BUILD: false

jobs:
  build-and-push-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: --debug
          driver-opts: image=moby/buildkit:v0.9.1

      - name: Write release version
        run: |
          TAG=${{ github.event.release.tag_name }}
          echo "VERSION=${TAG#v}" >> $GITHUB_ENV
      
      - name: Login to GitHub Container Registry
        if: env.LOCAL_BUILD != 'true'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.DEVELOPER_HANDLE }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push for amd64 platform
        run: |
          docker buildx build \
            --push \
            --platform linux/amd64 \
            --tag ghcr.io/${{ env.DEVELOPER_HANDLE }}/s5:amd64-${{ env.VERSION  }} \
            .

  build-and-push-armv7:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: --debug
          driver-opts: image=moby/buildkit:v0.9.1

      - name: Write release version
        run: |
          TAG=${{ github.event.release.tag_name }}
          echo "VERSION=${TAG#v}" >> $GITHUB_ENV
      
      - name: Login to GitHub Container Registry
        if: env.LOCAL_BUILD != 'true'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.DEVELOPER_HANDLE }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Swap Space
        uses: pierotofy/set-swap-space@v1.0
        with:
          swap-size-gb: 10
      - run: |
          # Workaround for https://github.com/rust-lang/cargo/issues/8719
          sudo mkdir -p /var/lib/docker
          sudo mount -t tmpfs -o size=10G none /var/lib/docker
          sudo systemctl restart docker

      - name: Build and push for armv7
        run: |
          docker buildx build \
            --push \
            --platform linux/arm/v7 \
            --tag ghcr.io/${{ env.DEVELOPER_HANDLE }}/s5:armv7-${{ env.VERSION }} \
            .

  build-and-push-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: --debug
          driver-opts: image=moby/buildkit:v0.9.1

      - name: Write release version
        run: |
          TAG=${{ github.event.release.tag_name }}
          echo "VERSION=${TAG#v}" >> $GITHUB_ENV
      
      - name: Login to GitHub Container Registry
        if: env.LOCAL_BUILD != 'true'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.DEVELOPER_HANDLE }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push for arm64v8 platform
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64/v8 \
            --tag ghcr.io/${{ env.DEVELOPER_HANDLE }}/s5:arm64-${{ env.VERSION }} \
            .

  build-and-push-manifest:
    needs: [build-and-push-amd64, build-and-push-armv7, build-and-push-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: --debug
          driver-opts: image=moby/buildkit:v0.9.1
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: |
            ghcr.io/${{ github.repository_owner }}/s5
          flavor: |
            latest=${{ startsWith(github.ref, 'refs/tags/') }}
          tags: type=ref,event=tag
      
      - name: Login to GitHub Container Registry
        if: env.LOCAL_BUILD != 'true'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.DEVELOPER_HANDLE }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push to registry
        run: |
          docker manifest create ghcr.io/${{ env.DEVELOPER_HANDLE }}/s5:${{ env.VERSION }} \
            ghcr.io/${{ env.DEVELOPER_HANDLE }}/s5:amd64-${{ env.VERSION }} \
            ghcr.io/${{ env.DEVELOPER_HANDLE }}/s5:arm64-${{ env.VERSION }} \
            ghcr.io/${{ env.DEVELOPER_HANDLE }}/s5:armv7-${{ env.VERSION }} \
          docker manifest inspect ghcr.io/${{ env.DEVELOPER_HANDLE }}/s5:${{ env.VERSION }}
          docker manifest push ghcr.io/${{ env.DEVELOPER_HANDLE }}/s5:${{ env.VERSION }}
          docker manifest push ghcr.io/${{ env.DEVELOPER_HANDLE }}/s5:latest
