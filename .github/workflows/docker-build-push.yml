name: Docker Build and Push

on:
  # push:
  #   branches:
  #     - main
  release:
    types: [created]

env:
  APP_VERSION: ${{ github.event.release.tag_name }}
  DEVELOPER_HANDLE: ${{ github.repository_owner }}

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.DEVELOPER_HANDLE }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Swap Space
        uses: pierotofy/set-swap-space@v1.0
        with:
          swap-size-gb: 10
      - run: |
          # Workaround for https://github.com/rust-lang/cargo/issues/8719
          sudo mkdir -p /var/lib/docker
          sudo mount -t tmpfs -o size=10G none /var/lib/docker
          sudo systemctl restart docker

      - name: Build and push
        # if: github.event_name == 'release'
        run: |
          docker buildx build \
            --push \
            --platform linux/amd64,linux/arm/v7,linux/arm64/v8, \
            --tag ghcr.io/${{ env.DEVELOPER_HANDLE }}/s5:latest \
            --tag ghcr.io/${{ env.DEVELOPER_HANDLE }}/s5:${{ env.APP_VERSION }} \
            .

      # Saving this in case we ever want to start doing builds on every commit
      # - name: Test Build
      #   if: github.event_name != 'release'
      #   run: |
      #     docker buildx build \
      #       --platform linux/amd64,linux/arm/v7,linux/arm64/v8 \
      #       .
